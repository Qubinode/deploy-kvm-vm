---
- name: setup libguestfs to support deploying rhel8 vm on a rhel7 host
  block:
    - name: check for presense of libguestfs appliance
      stat:
        path: /export/libguestfs/appliance/kernel
      register: libguestfs_app

    - name: ensure the direct /export/libguestfs exist
      file:
        path: /export/libguestfs
        state: directory

    - name: ensure libguestfs appliance is present
      unarchive:
        src: http://download.libguestfs.org/binaries/appliance/appliance-1.40.1.tar.xz
        dest: /export/libguestfs
        remote_src: yes
      when: not libguestfs_app.stat.exists
  when: rhel_release == 8 and ansible_distribution_major_version == '7'

# workaround for issue https://access.redhat.com/solutions/3914591
- name: deploy virt-customzie wrapper
  template:
    src: qubi-virt-customize.sh.j2
    dest: /usr/local/bin/qubi-virt-customize
    mode: 0755

- name: copy scripts to KVM host
  copy:
    src: "files/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 755
    owner: root
  with_items:
    - getvmip
    - attach-libvirt-disk
  delegate_to: "{{ kvm_install_host }}"

- name: Create VM data dir to store vm information
  file:
    state: directory
    path: "{{ vm_data_dir }}/{{ vm_name }}"
    force: yes
  become: yes
  delegate_to: "{{ kvm_install_host }}"

- name: Deploy Base VM
  import_tasks: deploy-vm.yml
  become: yes
  delegate_to: "{{ kvm_install_host }}"

#- name: Gather VM ip networking info
#  import_tasks: get_ip_info.yml
#  become: yes
#  delegate_to: "{{ kvm_install_host }}"
#  when: not static_ip|bool

- name: set vm ip variable to the one provided by the user
  set_fact:
    vm_ip: "{{ vm_ipaddress }}"
  when: static_ip|bool

- name: add {{ vm_name }} to ansible inventory inventory
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^{{ vm_name }}"
    line: "{{ vm_name }}   ansible_host={{ vm_ip }} ansible_user={{ admin_user }}"
    insertafter: '^\[{{ inventory_group }}\]'
    state: present
  register: vm_inventory_status
  when: update_inventory and vm_ip is defined

- name: check if VM is reachable on known ip address
  command: ping -c1 {{ vm_ip }}
  register: ping_result
  ignore_errors: yes
