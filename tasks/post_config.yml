---
#TODO: Place the getip task from configrue_vm into it's own task file
#      and use it here to get the VMs ip address. Then check if the VM
#      is responsive then proceed to up the VM.

- name: POST_CONFIG remove host from known host
  tags: [ deploy_vm, vm_post_config ]
  shell: ssh-keygen -R {{ item }} > /dev/null 2>&1
  changed_when: False
  delegate_to: localhost
  ignore_errors: yes
  loop:
    - "{{ vm_name }}.{{ vm_domain }}"
    - "{{ vm_name }}"
    - "{{ vm_ipaddress }}"
    - "{{ vm_ip }}"

- name: POST_CONFIG check for {{ vm_name }} in inventory {{ inventory_file }}
  tags: [ deploy_vm, vm_post_config ]
  command: grep -o {{ vm_name }} {{ inventory_file }}
  register: vm_in_inventory
  check_mode: no
  ignore_errors: yes
  changed_when: no
  delegate_to: localhost
  when: update_inventory|bool and vm_ip is defined

- name: POST_CONFIG Running post config tasks on {{ vm_name }}
  tags: [ deploy_vm, vm_post_config ]
  become: yes
  delegate_to: "{{ vm_name }}"
  when: vm_in_inventory.stdout == vm_name
  block:
    - name: POST_CONFIG update {{ vm_name }} /etc/resolv.conf
      template:
        src: resolv.conf.j2
        dest: /etc/resolv.conf
        mode: '0644'
    
    - name: POST_CONFIG change root password
      user:
        name: root
        update_password: always
        password: "{{ kvm_vm_root_pwd | password_hash('sha512') }}"
    
    - name: POST_CONFIG ensure cloud-init is uninstalled
      yum:
        name: cloud-init
        state: absent
  rescue:
    - name: Fail to run post config
      debug:
        msg: 'Was not able to set root password, remove clound-init and update resolv.conf'

- name: POST_CONFIG Check if cd-rom is attached
  tags: [ deploy_vm, remove_cdrom ]
  shell: >
    virsh domblklist "{{ vm_name }}" | awk '/{{ cidata_iso_name }}/ {print $1}'
  register: cdrom_device
  ignore_errors: yes
  changed_when: false
  become: yes

- name: POST_CONFIG Declare CDROM
  tags: [ deploy_vm, remove_cdrom ]
  set_fact:
    cdrom_device: "{{ cdrom_device.stdout.split()[0] }}"
  when: >
    cdrom_device.stdout.split()[0] is defined and
    cdrom_device.stdout.split()[0]|length > 0

- name: POST_CONFIG Eject CDROM {{ cdrom_device }}
  tags: [ deploy_vm, remove_cdrom ]
  shell: >
    virsh change-media {{ vm_name }} {{ cdrom_device }} --update --config --force
  ignore_errors: yes
  when: cdrom_device|length > 0

- name: POST_CONFIG display vm information
  tags: [ deploy_vm, vm_post_config ]
  debug:
    msg: |
      **********************************
      * VM DEPLOYMENT COMPLETE         *
      *                                *
      * VM Name:    {{ vm_name }}      *
      * IP Address: {{ vm_ip }}        *
      * Username:   {{ admin_user }}   *
      **********************************