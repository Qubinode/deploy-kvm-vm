---
- name: GET_IP_INFO Try to discover VM ip address
  when: vm_ip is not defined or vm_ip | length == 0
  tags: [ deploy_vm, config_vm, config_vm_ip ]
  block:
    - name: try to discover {{ vm_name }} ip address
      command: "/usr/local/bin/getvmip -r {{ vm_name }}"
      until: dhcp_vm_ip.stdout != ""
      retries: 30
      delay: 1
      register: dhcp_vm_ip
      changed_when: False
    - name: CONFIGURE_VM set vm_ip var to ip dhcp provided ip address
      tags: [ deploy_vm, config_vm, config_vm_ip ]
      set_fact:
        vm_ip: "{{ dhcp_vm_ip.stdout }}"
      when: dhcp_vm_ip.stdout is defined and dhcp_vm_ip.stdout|length > 0
  rescue:
    - name: Show result
      debug:
        msg: "could not get ip for a vm"

# TODO: New to test how the code function when user provides static ip address
#       If only ip address provided, then the VM is deployed using DHCP
#       Then reconfigured to use the provided ip address
               
- name: CONFIGURE_VM ensure the var vm_ip is defined
  tags: [ deploy_vm, config_vm, config_vm_ip ]
  fail:
    msg: "Could not find the ip address for the VM {{ vm_name }}."
  when: vm_ip is not defined or vm_ip | length == 0

- name: convert {{ vm_name }} DHCP network info to static
  tags: [ deploy_vm, config_vm, config_vm_ip ]
  when: convert_dhcp_to_static|bool
  block:
    - name: CONFIGURE_VM configure {{ vm_name }} to use dhcp provided ip address as static ip config
      import_tasks: build_network_config.yml
  
    - name: SET-DHCP-TO-STATIC generate {{ vm_name }} ifcfg interface template
      template:
        src: ifcfg.j2
        dest: "{{ vm_ifcfg }}"
        mode: '0640'
    
    - name: SET-DHCP-TO-STATIC Shutdown VM
      when: vm_ip_differ|bool
      include_tasks: 
        file: shutdown_vm.yml
        apply:
          tags:
            - shutdown_vm
  
    - name: SET-DHCP-TO-STATIC deploy custom /etc/sysconfig/network-scripts/ifcfg-{{ vm_nic }}
      become: yes
      when: vm_ip_differ|bool
      command: >
        /usr/local/bin/qubi-virt-customize -a {{ os_disk }} --upload {{ vm_ifcfg }}:/etc/sysconfig/network-scripts/ifcfg-{{ vm_nic }}
      register: uploaded_static_ip
    
    - name: SET-DHCP-TO-STATIC startup VM
      include_tasks: 
        file: startup_vm.yml
        apply:
          tags:
            - startup_vm
  
    - name: CONFIGURE_VM check if {{ vm_name }} is reachable on known ip address
      wait_for:
        host: "{{ vm_ip }}"
        port: 22
        delay: 10
        timeout: 120
        msg: "{{ vm_name }} not reachable on {{ vm_ip }}"
      register: ping_result

- name: CONFIGURE_VM add {{ vm_name }} to ansible inventory inventory
  tags: [ deploy_vm, config_vm, update_inventory ]
  delegate_to: localhost
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^{{ vm_name }}"
    line: "{{ vm_name }}   ansible_host={{ vm_ip }} ansible_user={{ admin_user }}"
    insertafter: '^\[{{ inventory_group }}\]'
    state: present
  register: vm_inventory_status
  when: update_inventory|bool and vm_ip is defined
