---
- name: "Wait 300 seconds for port 22 to become open on {{ vm_name }} "
  wait_for:
    port: 22
    host: '{{ vm_ip }}'
    search_regex: OpenSSH
    delay: 10
  connection: local

- name: check for {{ vm_name }} in inventory {{ inventory_file }}
  command: grep {{ vm_name }} {{ inventory_file }}
  register: vm_in_inventory
  check_mode: no
  ignore_errors: yes
  changed_when: no
  when: update_inventory and vm_ip is defined

- name: scan remote for keys
  shell: |
      ssh-keyscan -H {{ vm_name }} \
                  {{ vm_ip }} \
                  {{ lookup('dig', vm_name ) }} | sort -u
  register: host_keys
  changed_when: false
  delegate_to: "{{ kvm_install_host }}"

- name: Update "~/.ssh/known_hosts" with discovered keys
  known_hosts:
    state: present
    name: "{{ item }}"
    key: "{{ host_keys.stdout_lines | select('search','^'~item~' .*$') | join('\n') }}"
  loop:
    - "{{ vm_name }}"
    - "{{ vm_ip }}"
    - "{{ lookup('dig', vm_name ) }}"
  failed_when: false
  delegate_to: "{{ kvm_install_host }}"

- name: make sure resolv.conf is updated
  find:
    paths: /etc/
    contains: '^nameserver ([0-9]{1,3}\.){1,3}[0-9]{1,3}$'
    patterns: "resolv.conf"
  register: resolv_conf_entries
  delegate_to: "{{ vm_name }}"
  when: vm_in_inventory.rc == 0

- name: check for dns lookup
  command: getent ahosts www.cnet.com
  failed_when: false
  changed_when: false
  register: dns_lookup_result
  delegate_to: "{{ vm_name }}"
  when: vm_in_inventory.rc == 0

- name: update {{ vm_name }} /etc/resolv.conf
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
  when: (vm_in_inventory.rc == 0 and dns_lookup_result.rc == 2)
        or
        (vm_in_inventory.rc == 0 and resolv_conf_entries.matched == 0)
  delegate_to: "{{ vm_name }}"

- name: ensure cloud-init is uninstalled when not using static ip configuration
  yum:
    name: cloud-init
    state: absent
  delegate_to: "{{ vm_name }}"
  when: vm_in_inventory.rc == 0 and not static_ip|bool
